var tb;(()=>{var __webpack_modules__={125:()=>{Blockly.Blocks.adjust_scene={init:function(){this.appendDummyInput().appendField("Adjust Scene"),this.appendDummyInput().appendField("Set Background").appendField(new Blockly.FieldColour("black"),"color"),this.setColour(240),this.setTooltip("Adjust Scene")}},Blockly.Blocks.adjust_lights={init:function(){this.appendDummyInput().appendField("Adjust Ambient Light Color").appendField(new Blockly.FieldColour("white"),"ambColor").appendField(" Intensity").appendField(new Blockly.FieldNumber(2),"ambIntense"),this.appendDummyInput().appendField("Adjust Direction Light Color").appendField(new Blockly.FieldColour("white"),"dirColor").appendField(" Intensity").appendField(new Blockly.FieldNumber(2),"dirIntense"),this.appendDummyInput().appendField("Move").appendField("Left").appendField(new Blockly.FieldNumber(1),"pos_x").appendField("Up").appendField(new Blockly.FieldNumber(1),"pos_y").appendField("Near").appendField(new Blockly.FieldNumber(1),"pos_z"),this.setColour(240),this.setTooltip("Adjust Lights")}},Blockly.Blocks.adjust_camera={init:function(){this.appendDummyInput().appendField("Adjust Camera"),this.appendDummyInput().appendField("Move").appendField("Left").appendField(new Blockly.FieldNumber(0),"pos_x").appendField("Up").appendField(new Blockly.FieldNumber(0),"pos_y").appendField("Near").appendField(new Blockly.FieldNumber(5),"pos_z"),this.setColour(240),this.setTooltip("Adjust Camera")}},Blockly.Blocks.create_line={init:function(){this.appendDummyInput().appendField("Create a ").appendField(new Blockly.FieldColour("white"),"color").appendField("Line"),this.appendDummyInput("start").appendField("Start").appendField("Left").appendField(new Blockly.FieldNumber(0),"start_x").appendField("Up").appendField(new Blockly.FieldNumber(0),"start_y").appendField("Near").appendField(new Blockly.FieldNumber(0),"start_z"),this.appendDummyInput("end").appendField("End").appendField("Left").appendField(new Blockly.FieldNumber(0),"end_x").appendField("Up").appendField(new Blockly.FieldNumber(0),"end_y").appendField("Near").appendField(new Blockly.FieldNumber(0),"end_z"),this.setColour(240),this.setTooltip("Create a Line")}},Blockly.Blocks.create_mesh={init:function(){this.appendDummyInput().appendField("Create Mesh"),this.appendValueInput("geometry").appendField("with Geometry"),this.appendValueInput("material").appendField("and Material"),this.appendDummyInput("position").appendField("Move").appendField("Left").appendField(new Blockly.FieldNumber(0),"pos_x").appendField("Up").appendField(new Blockly.FieldNumber(0),"pos_y").appendField("Near").appendField(new Blockly.FieldNumber(0),"pos_z"),this.appendDummyInput("rotation").appendField("Rotate").appendField("Tilt").appendField(new Blockly.FieldNumber(0),"rot_x").appendField("Turn").appendField(new Blockly.FieldNumber(0),"rot_y").appendField("Spin").appendField(new Blockly.FieldNumber(0),"rot_z"),this.setColour(240),this.setTooltip("Create a mesh with specified geometry and material")}},Blockly.Blocks.create_cube={init:function(){this.appendDummyInput().appendField("Create Cube"),this.appendDummyInput().appendField("with width").appendField(new Blockly.FieldNumber(1,0),"width"),this.appendDummyInput().appendField("and height").appendField(new Blockly.FieldNumber(1,0),"height"),this.appendDummyInput().appendField("and depth").appendField(new Blockly.FieldNumber(1,0),"depth"),this.setOutput(!0,"Cube"),this.setColour(230),this.setTooltip("Create a cube with specified dimensions."),this.setHelpUrl("")}},Blockly.Blocks.create_sphere={init:function(){this.appendDummyInput().appendField("Create Sphere"),this.appendDummyInput().appendField("with radius").appendField(new Blockly.FieldNumber(1,0),"radius"),this.setOutput(!0,"Sphere"),this.setColour(230),this.setTooltip("Create a sphere with specified radius.")}},Blockly.Blocks.create_cylinder={init:function(){this.appendDummyInput().appendField("Create Cylinder"),this.appendDummyInput().appendField("with radius").appendField(new Blockly.FieldNumber(1,0),"radius"),this.appendDummyInput().appendField("and height").appendField(new Blockly.FieldNumber(1,0),"height"),this.setOutput(!0,"Cylinder"),this.setColour(230),this.setTooltip("Create a cylinder with specified dimensions.")}},Blockly.Blocks.create_text={init:function(){this.appendDummyInput().appendField("Create Text").appendField(new Blockly.FieldTextInput("Hello"),"text"),this.appendDummyInput().appendField("with size").appendField(new Blockly.FieldNumber(1,0),"size"),this.appendDummyInput().appendField("and height").appendField(new Blockly.FieldNumber(.1,0),"height"),this.setOutput(!0,"Text"),this.setColour(230),this.setTooltip("Create text.")}},Blockly.Blocks.create_mesh_material={init:function(){this.appendDummyInput().appendField("Create Mesh").appendField(new Blockly.FieldDropdown([["Basic","basic"],["Phong","phong"],["Standard","standard"]]),"type").appendField("Material"),this.appendDummyInput().appendField("with color ").appendField(new Blockly.FieldColour("white"),"color").appendField("and image").appendField(new Blockly.FieldTextInput(""),"image"),this.setOutput(!0,"Material"),this.setColour(160),this.setTooltip("Create the material with spefic options")}},Blockly.Blocks.create_brush={init:function(){this.appendDummyInput().appendField("Create Brush"),this.appendValueInput("geometry").appendField("with Geometry"),this.appendValueInput("material").appendField("and Material"),this.setOutput(!0,"Brush"),this.setColour(240),this.setTooltip("Create a brush with specified geometry and material")}},Blockly.Blocks.create_csg={init:function(){this.appendDummyInput().appendField("Create CSG using").appendField(new Blockly.FieldDropdown([["+","ADDITION"],["-","SUBTRACTION"],["--","HOLLOW_SUBTRACTION"],["=","INTERSECTION"],["==","HOLLOW_INTERSECTION"]]),"operation"),this.appendValueInput("brush1").appendField("with Brush 1"),this.appendValueInput("brush2").appendField("and Brush 2"),this.setColour(220),this.setTooltip("Create a CSG with two brushes")}}},13:()=>{javascript.javascriptGenerator.forBlock.adjust_scene=function(e){return`\nscene.background = new THREE.Color( '${e.getFieldValue("color")}' );\n`},javascript.javascriptGenerator.forBlock.adjust_lights=function(e){var t="\n";return t+=`ambientLight.color.set('${e.getFieldValue("ambColor")}'); \n`,t+=`ambientLight.intensity = ${e.getFieldValue("ambIntense")}; \n`,t+=`directionalLight.color.set('${e.getFieldValue("dirColor")}'); \n`,(t+=`directionalLight.intensity = ${e.getFieldValue("dirIntense")}; \n`)+`directionalLight.position.set(${e.getFieldValue("pos_x")}, ${e.getFieldValue("pos_y")}, ${e.getFieldValue("pos_z")}); \n`},javascript.javascriptGenerator.forBlock.adjust_camera=function(e){var t="\n";return t+=`camera.position.set(${e.getFieldValue("pos_x")}, ${e.getFieldValue("pos_y")}, ${e.getFieldValue("pos_z")}); \n`,e.getFieldValue("rot_x"),e.getFieldValue("rot_y"),e.getFieldValue("rot_z"),t};var lineCount=0;javascript.javascriptGenerator.forBlock.create_line=function(e){var t=e.getFieldValue("start_x"),i=e.getFieldValue("end_x"),a=e.getFieldValue("start_y"),l=e.getFieldValue("end_y"),n=e.getFieldValue("start_z"),o=e.getFieldValue("end_z"),r=e.getFieldValue("color")||"0xffffff",p="\n";return t==i&&a==l&&n==o||(p+=`const linePoints${++lineCount} = [];\n`,p+=`linePoints${lineCount}.push( new THREE.Vector3( ${t}, ${a}, ${n} ) );\n`,p+=`linePoints${lineCount}.push( new THREE.Vector3( ${i}, ${l}, ${o} ) );\n`,p+=`const lineGeometry${lineCount} = new THREE.BufferGeometry().setFromPoints( linePoints${lineCount} );\n`,p+=`const lineMaterial${lineCount} = new THREE.LineBasicMaterial( { color: '${r}' } );\n`,p+=`const line${lineCount} = new THREE.Line( lineGeometry${lineCount}, lineMaterial${lineCount} );\n`,p+=`scene.add(line${lineCount});\n`),p};var meshCount=0;javascript.javascriptGenerator.forBlock.create_mesh=function(e){var t=Blockly.JavaScript.valueToCode(e,"geometry",Blockly.JavaScript.ORDER_NONE),i=Blockly.JavaScript.valueToCode(e,"material",Blockly.JavaScript.ORDER_NONE);if(!t)return"";i||(i="new THREE.MeshPhongMaterial({ color: '#ffffff' })");var a=`var mesh${++meshCount} = new THREE.Mesh(${t}, ${i});\n`,l=e.getFieldValue("pos_x");l&&(a+=`mesh${meshCount}.position.x = ${l}; \n`);var n=e.getFieldValue("pos_y");n&&(a+=`mesh${meshCount}.position.y = ${n}; \n`);var o=e.getFieldValue("pos_z");o&&(a+=`mesh${meshCount}.position.z = ${o}; \n`);var r=e.getFieldValue("rot_x");r&&(a+=`mesh${meshCount}.rotation.x = ${r}; \n`);var p=e.getFieldValue("rot_y");p&&(a+=`mesh${meshCount}.rotation.y = ${p}; \n`);var d=e.getFieldValue("rot_z");return d&&(a+=`mesh${meshCount}.rotation.z = ${d}; \n`),a+`scene.add(mesh${meshCount})`},javascript.javascriptGenerator.forBlock.create_cube=function(e){return[`new THREE.BoxGeometry(${e.getFieldValue("width")}, ${e.getFieldValue("height")}, ${e.getFieldValue("depth")})`,Blockly.JavaScript.ORDER_ATOMIC]},javascript.javascriptGenerator.forBlock.create_sphere=function(e){return[`new THREE.SphereGeometry(${e.getFieldValue("radius")}, 64, 64)`,Blockly.JavaScript.ORDER_ATOMIC]},javascript.javascriptGenerator.forBlock.create_cylinder=function(e){var t=e.getFieldValue("radius");return[`new THREE.CylinderGeometry(${t}, ${t}, ${e.getFieldValue("height")}, 64)`,Blockly.JavaScript.ORDER_ATOMIC]},javascript.javascriptGenerator.forBlock.create_text=function(e){return[`new TextGeometry( '${e.getFieldValue("text")}', { font: font, size : ${e.getFieldValue("size")}, height: ${e.getFieldValue("height")}, hover: 30 } )`,Blockly.JavaScript.ORDER_ATOMIC]},javascript.javascriptGenerator.forBlock.create_mesh_material=function(e){var t,i=e.getFieldValue("type"),a=e.getFieldValue("color"),l=e.getFieldValue("image");return"basic"==i?t="new THREE.MeshBasicMaterial({ ":"phong"==i?t="new THREE.MeshPhongMaterial({ ":"standard"==i&&(t="new THREE.MeshStandardMaterial({ roughness: 0.25, "),a&&(t+=`color: '${a}', `),l&&(t+=` map: textureLoader.load('${l}') `),[t+="})",Blockly.JavaScript.ORDER_ATOMIC]};var brushCount=0;javascript.javascriptGenerator.forBlock.create_brush=function(e){var t=Blockly.JavaScript.valueToCode(e,"geometry",Blockly.JavaScript.ORDER_NONE),i=Blockly.JavaScript.valueToCode(e,"material",Blockly.JavaScript.ORDER_NONE);return t?(i||(i="new THREE.MeshPhongMaterial({ color: '#ffffff' })"),[`var brush${++brushCount} = new Brush(${t}, ${i});\n`,Blockly.JavaScript.ORDER_ATOMIC]):""},javascript.javascriptGenerator.forBlock.create_csg=function(block){var operation=block.getFieldValue("operation"),opCode=eval(operation),brush1Block=Blockly.JavaScript.valueToCode(block,"brush1",Blockly.JavaScript.ORDER_NONE),brush2Block=Blockly.JavaScript.valueToCode(block,"brush2",Blockly.JavaScript.ORDER_NONE);if(brushCount=0,!brush1Block||!brush1Block)return"";var code=brush1Block+brush2Block;return code+=`var result = evaluator.evaluate( brush1, brush2, ${opCode} );\n`,code+="scene.add(result)",code}},529:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{init:()=>init});var WS_NAME="ThreeBlocklyWS",workspace;function init(e){workspace=Blockly.inject("blocklyDiv",e);var t=window.id||new URLSearchParams(window.location.search).get("id");loadWorkspace(WS_STATES[t]||localStorage.getItem(WS_NAME)||WS_STATES.intro),e&&1!=e.readOnly?workspace.addChangeListener(updateCode):updateCode()}function loadWorkspace(e){if(e)try{Blockly.serialization.workspaces.load(JSON.parse(e),workspace)}catch(e){console.log(e),delete localStorage[WS_NAME]}}const supportedEvents=new Set([Blockly.Events.BLOCK_CHANGE,Blockly.Events.BLOCK_CREATE,Blockly.Events.BLOCK_DELETE,Blockly.Events.BLOCK_MOVE]);var threeDiv=document.getElementById("threeDiv"),codeDiv=document.getElementById("codeDiv");function updateCode(event){if(workspace.isDragging())return;if(event&&!supportedEvents.has(event.type))return;var state=Blockly.serialization.workspaces.save(workspace);localStorage.setItem(WS_NAME,JSON.stringify(state));const code=javascript.javascriptGenerator.workspaceToCode(workspace);codeDiv&&(codeDiv.innerText=code);try{preEval(),eval(code),postEval()}catch(e){console.log(e)}}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var i=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](i,i.exports,__webpack_require__),i.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var i in t)__webpack_require__.o(t,i)&&!__webpack_require__.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__(125),__webpack_require__(13);var e=__webpack_require__(529);window.ws=e})(),tb=__webpack_exports__})();